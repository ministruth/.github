name: Build rust binary

on:
  workflow_call:
    inputs:
      prefix:
        description: "Artifact prefix"
        required: false
        type: string
      upload:
        description: "Whether to upload artifact"
        required: false
        type: boolean
      args:
        description: "Additional args"
        required: false
        type: string

jobs:
  build:
    name: Build ${{ matrix.platform.os_name }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
          - os_name: linux-x86_64
            os: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
          - os_name: linux-i686
            os: ubuntu-24.04
            target: i686-unknown-linux-gnu
          - os_name: linux-aarch64
            os: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu
          - os_name: windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
          - os_name: windows-i686
            os: windows-latest
            target: i686-pc-windows-msvc
          - os_name: darwin-x86_64
            os: macos-13
            target: x86_64-apple-darwin
          - os_name: darwin-aarch64
            os: macos-latest
            target: aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Cache cargo & target directories
        uses: Swatinem/rust-cache@v2
      - uses: ilammy/setup-nasm@v1
        if: ${{ matrix.platform.os == 'windows-latest'}}
      - name: Install i686 deps
        if: ${{ matrix.platform.os_name == 'linux-i686'}}
        shell: bash
        run: |
          apt-get update && apt-get install -y gcc-multilib g++-multilib
      - name: Install Protoc
        id: protoc-install
        uses: arduino/setup-protoc@v3
        with:
          version: "27.3"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set protoc path
        shell: bash
        run: |
          echo "${{ steps.protoc-install.outputs.path }}" >> $GITHUB_PATH
      - name: Build binary
        shell: bash
        run: |
          rustup target add ${{ matrix.platform.target }}
          cargo build --release --target ${{ matrix.platform.target }} ${{ inputs.args }}
      - name: Package as archive
        if: ${{ inputs.upload }}
        shell: bash
        run: |
          make output BUILD_TYPE=release TARGET_DIR=$(pwd)/target/${{ matrix.platform.target }}/release
          mkdir release
          mv bin release/${{ inputs.prefix }}-${{ matrix.platform.os_name }}
      - uses: actions/upload-artifact@v4
        if: ${{ inputs.upload }}
        with:
          name: ${{ inputs.prefix }}-${{ matrix.platform.os_name }}
          path: release
          retention-days: 1
